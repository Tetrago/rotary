"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(n),b=l,g=p["".concat(s,".").concat(b)]||p[b]||d[b]||o;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function g(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,i=new Array(o);i[0]=b;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[p]="string"==typeof e?e:l,i[1]=a;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},9881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=n(7462),l=(n(7294),n(3905));const o={sidebar_position:1,slug:"/"},i="Intro",a={unversionedId:"intro",id:"intro",title:"Intro",description:"Project Structure",source:"@site/docs/intro.md",sourceDirName:".",slug:"/",permalink:"/rotary/",draft:!1,editUrl:"https://github.com/tetrago/rotary/tree/develop/docs/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:"/"},sidebar:"tutorialSidebar",next:{title:"Engine",permalink:"/rotary/engine/"}},s={},c=[{value:"Project Structure",id:"project-structure",level:2},{value:"Directory Structure",id:"directory-structure",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,l.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"intro"},"Intro"),(0,l.kt)("h2",{id:"project-structure"},"Project Structure"),(0,l.kt)("mermaid",{value:'flowchart TD\n    subgraph "Extras"\n        player([Player])\n        editor([Editor])\n        shaderx([ShaderX])\n    end\n\n    engine([Engine])\n    p2d([Physics2D])\n    p3d([Physics3D])\n    plat([Platform Toolkit])\n    shcc([Shader Cross-Compiler])\n    uitk([UI Toolkit])\n    vtk([Vulkan Toolkit])\n\n    subgraph "Third Party"\n        bullet{{Bullet}}\n        imgui{{ImGui}}\n        glfw{{GLFW}}\n        glslang{{Glslang}}\n        spdlog{{spdlog}}\n        spirv_cross{{SPIRV-Cross}}\n        vulkan_headers{{Vulkan-Headers}}\n        vulkan{{Vulkan}}\n    end\n\n    player --- engine\n    editor --- engine & uitk\n    shaderx --- shcc\n\n    engine --- p2d & p3d & plat & spdlog & shcc & vtk\n    p2d --- bullet\n    p3d --- bullet\n    plat --- glfw & vulkan_headers\n    shcc --- glslang & spirv_cross\n    uitk --- imgui\n    vtk --- vulkan_headers & vulkan\n\n    click player "./extras/player"\n    click shaderx "./extras/shaderx"\n\n    click engine "./engine"\n    click plat "./libs/plat"\n    click shcc "./libs/shcc"\n    click vtk "./libs/vtk"\n\n    click bullet "https://github.com/bulletphysics/bullet3" _blank\n    click imgui "https://github.com/ocornut/imgui" _blank\n    click glfw "https://www.glfw.org/" _blank\n    click glslang "https://github.com/KhronosGroup/glslang" _blank\n    click spirv_cross "https://github.com/KhronosGroup/SPIRV-Cross" _blank\n    click spdlog "https://github.com/gabime/spdlog" _blank\n    click vulkan_headers "https://github.com/KhronosGroup/Vulkan-Headers" _blank\n    click vulkan "https://github.com/KhronosGroup/Vulkan-Loader" _blank\n\n    style editor fill:#f96\n\n    style p2d fill:#f96\n    style p3d fill:#f96\n    style uitk fill:#f96\n\n    style bullet fill:#f96\n    style imgui fill:#f96'}),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"The Platform Toolkit library is modularized and contains multiple, some independent, libraries.")),(0,l.kt)("h2",{id:"directory-structure"},"Directory Structure"),(0,l.kt)("mermaid",{value:"flowchart TD\n    rotary[(Rotary)]\n\n    extras[Extras]\n    player([Player])\n    shaderx([ShaderX])\n\n    libs[Libraries]\n    engine([Engine])\n    plat([Platform Toolkit])\n    shcc([Shader Cross-Compiler])\n    vtk([Vulkan Toolkit])\n\n    rotary -- extras --- extras\n    rotary -- libs --- libs\n\n    extras -- player --- player\n    extras -- shaderx --- shaderx\n\n    libs -- rotary --- engine\n    libs -- plat --- plat\n    libs -- shcc --- shcc\n    libs -- vtk --- vtk"}))}d.isMDXComponent=!0}}]);