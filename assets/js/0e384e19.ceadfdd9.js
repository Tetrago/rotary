"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>b});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(r),f=o,b=p["".concat(s,".").concat(f)]||p[f]||d[f]||l;return r?n.createElement(b,i(i({ref:t},u),{},{components:r})):n.createElement(b,i({ref:t},u))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,i=new Array(l);i[0]=f;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[p]="string"==typeof e?e:o,i[1]=a;for(var c=2;c<l;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9881:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const l={sidebar_position:1},i="Intro",a={unversionedId:"intro",id:"intro",title:"Intro",description:"Project Structure",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/rotary/docs/intro",draft:!1,editUrl:"https://github.com/tetrago/rotary/tree/develop/docs/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Intro",permalink:"/rotary/docs/engine/intro"}},s={},c=[{value:"Project Structure",id:"project-structure",level:2},{value:"Directory Structure",id:"directory-structure",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"intro"},"Intro"),(0,o.kt)("h2",{id:"project-structure"},"Project Structure"),(0,o.kt)("mermaid",{value:'flowchart TD\n    subgraph "Extras"\n        player([Player])\n        editor([Editor])\n        shaderx([ShaderX])\n    end\n\n    engine([Engine])\n    p2d([Physics2D])\n    p3d([Physics3D])\n    plat([Platform Toolkit])\n    shcc([Shader Cross-Compiler])\n    uitk([UI Toolkit])\n    vtk([Vulkan Toolkit])\n\n    subgraph "Third Party"\n        bullet{{Bullet}}\n        imgui{{ImGui}}\n        glfw{{GLFW}}\n        glslang{{Glslang}}\n        spdlog{{spdlog}}\n        spirv_cross{{SPIRV-Cross}}\n        vulkan_headers{{Vulkan-Headers}}\n        vulkan{{Vulkan}}\n    end\n\n    player --- engine\n    editor --- engine & uitk\n    shaderx --- shcc\n\n    engine --- p2d & p3d & plat & spdlog & shcc & vtk\n    p2d --- bullet\n    p3d --- bullet\n    plat --- glfw & vulkan_headers\n    shcc --- glslang & spirv_cross\n    uitk --- imgui\n    vtk --- vulkan_headers & vulkan\n\n    click bullet "https://github.com/bulletphysics/bullet3" _blank\n    click imgui "https://github.com/ocornut/imgui" _blank\n    click glfw "https://www.glfw.org/" _blank\n    click glslang "https://github.com/KhronosGroup/glslang" _blank\n    click spirv_cross "https://github.com/KhronosGroup/SPIRV-Cross" _blank\n    click spdlog "https://github.com/gabime/spdlog" _blank\n    click vulkan_headers "https://github.com/KhronosGroup/Vulkan-Headers" _blank\n    click vulkan "https://github.com/KhronosGroup/Vulkan-Loader" _blank\n\n    style editor fill:#f96\n\n    style p2d fill:#f96\n    style p3d fill:#f96\n    style uitk fill:#f96\n\n    style bullet fill:#f96\n    style imgui fill:#f96'}),(0,o.kt)("h2",{id:"directory-structure"},"Directory Structure"),(0,o.kt)("mermaid",{value:"flowchart TD\n    rotary[(Rotary)]\n\n    extras[Extras]\n    player([Player])\n    shaderx([ShaderX])\n\n    libs[Libraries]\n    engine([Engine])\n    plat([Platform Toolkit])\n    shcc([Shader Cross-Compiler])\n    vtk([Vulkan Toolkit])\n\n    rotary -- extras --- extras\n    rotary -- libs --- libs\n\n    extras -- player --- player\n    extras -- shaderx --- shaderx\n\n    libs -- rotary --- engine\n    libs -- plat --- plat\n    libs -- shcc --- shcc\n    libs -- vtk --- vtk"}))}d.isMDXComponent=!0}}]);